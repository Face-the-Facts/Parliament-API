openapi: 3.0.0
info:
  title: Face the Facts API
  description: Face the Facts API
  contact:
    email: fabi@facethefacts.app
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  version: 1.0.0
servers:
  - url: 'https://virtserver.swaggerhub.com/Face-the-Facts/REST-API/1.0.0'
    description: SwaggerHub API Auto Mocking
tags:
  - name: Candidates
    description: Everything about candidates
  - name: Parties
    description: Everything about parties
  - name: Constituencies
    description: Everything about constituencies
  - name: Poll
    description: everything about polls
paths:
  /candidates:
    get:
      tags:
        - Candidates
      description: Returns a list of candidates
      operationId: getCandidates
      parameters:
        - name: limit
          in: query
          description: Limits the number of items on a page
          required: false
          style: form
          explode: true
          schema:
            type: integer
        - name: offset
          in: query
          description: Specifies the page number of the artists to be displayed
          required: false
          style: form
          explode: true
          schema:
            type: integer
        - name: party
          in: query
          description: ID of the party to be filtered by
          required: false
          style: form
          explode: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully returned a list of candidates
          content:
            'application/json:':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Candidate'
        '400':
          $ref: '#/components/responses/400Error'
    post:
      tags:
        - Candidates
      description: Create a new Candidate
      operationId: postCandidate
      requestBody:
        description: Optional description in *Markdown*
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Candidate'
        required: true
      responses:
        '201':
          $ref: '#/components/responses/201Created'
        '400':
          $ref: '#/components/responses/400Error'
        '404':
          $ref: '#/components/responses/404Error'
  '/candidates/{id}':
    get:
      tags:
        - Candidates
      description: Returns a candidate by ID
      operationId: getCandidate
      parameters:
        - name: id
          in: path
          description: The ID of the candidate to return
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            'application/json:':
              schema:
                $ref: '#/components/schemas/Candidate'
          links:
            GetCandidateParty:
              operationId: getParty
              parameters:
                partyId: $response.body#/party
        '400':
          $ref: '#/components/responses/400Error'
        '404':
          $ref: '#/components/responses/404Error'
  /elections:
    get:
      tags:
        - Election
      description: Get a list of elections
      parameters:
        - name: limit
          in: query
          description: Limits the number of items on a page
          required: false
          style: form
          explode: true
          schema:
            type: integer
        - name: offset
          in: query
          description: Specifies the page number of the artists to be displayed
          required: false
          style: form
          explode: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ElectionResponse'
        '404':
          $ref: '#/components/responses/404Error'
    post:
      tags:
        - Election
      description: Add a new election
      parameters:
        - name: limit
          in: query
          description: Limits the number of items on a page
          required: false
          style: form
          explode: true
          schema:
            type: integer
        - name: offset
          in: query
          description: Specifies the page number of the artists to be displayed
          required: false
          style: form
          explode: true
          schema:
            type: integer
      requestBody:
        description: Election request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ElectionRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElectionResponse'
  '/elections/{id}':
    get:
      tags:
        - Election
      description: Get a list of elections
      parameters:
        - name: limit
          in: query
          description: Limits the number of items on a page
          required: false
          style: form
          explode: true
          schema:
            type: integer
        - name: offset
          in: query
          description: Specifies the page number of the artists to be displayed
          required: false
          style: form
          explode: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ElectionResponse'
        '404':
          $ref: '#/components/responses/404Error'
  /parties:
    get:
      tags:
        - Parties
      description: Returns a collection of Parties
      parameters:
        - name: partyId
          in: query
          description: The ID of the Political Party to return
          required: false
          style: form
          explode: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            'application/json:':
              schema:
                $ref: '#/components/schemas/Party'
    post:
      tags:
        - Parties
      description: Create a new Candidate
      operationId: postParty
      requestBody:
        description: Political party to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Party'
        required: true
      responses:
        '201':
          $ref: '#/components/responses/201Created'
    head:
      tags:
        - Parties
      responses:
        '200':
          description: OK
  '/parties/{id}':
    get:
      tags:
        - Parties
      description: Returns a Political Party by ID
      parameters:
        - name: id
          in: path
          description: The ID of the Political Party to return
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            'application/json:':
              schema:
                $ref: '#/components/schemas/Party'
          links:
            GetPartyMembers:
              operationId: GetCandidatesByParty
              parameters:
                politicalParty: $response.body#/id
    put:
      tags:
        - Parties
      description: Replace a Party
      operationId: putParty
      parameters:
        - name: id
          in: path
          description: The ID of the Political Party to return
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      requestBody:
        description: Optional description in *Markdown*
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Party'
        required: true
      responses:
        '201':
          $ref: '#/components/responses/201Created'
    delete:
      tags:
        - Parties
      description: Delete a Party
      operationId: deleteParty
      parameters:
        - name: id
          in: path
          description: The ID of the Political Party to return
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        '201':
          $ref: '#/components/responses/201Created'
    patch:
      tags:
        - Parties
      description: Partially update a Party
      operationId: patchParty
      parameters:
        - name: id
          in: path
          description: The ID of the Political Party to return
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      requestBody:
        description: Optional description in *Markdown*
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Party'
        required: true
      responses:
        '201':
          $ref: '#/components/responses/201Created'
components:
  parameters:
    PageLimit:
      name: limit
      in: query
      description: Limits the number of items on a page
      required: false
      style: form
      explode: true
      schema:
        type: integer
    PageNumber:
      name: offset
      in: query
      description: Specifies the page number of the artists to be displayed
      required: false
      style: form
      explode: true
      schema:
        type: integer
    Candidate:
      name: candidate
      in: query
      description: ID of the candidate to be filtered by
      required: false
      style: form
      explode: true
      schema:
        type: integer
    PartyId:
      name: party
      in: query
      description: ID of the party to be filtered by
      required: false
      style: form
      explode: true
      schema:
        type: integer
  schemas:
    ElectionResponse:
      type: object
      required:
        - date
        - id
        - label
        - polity
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        polity:
          $ref: '#/components/schemas/Polity'
        date:
          type: string
          format: date-time
        label:
          type: string
          example: Bundestagswahl 2021
    ElectionRequest:
      required:
        - date
        - label
        - polity_id
      type: object
      properties:
        polity_id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        date:
          type: string
          format: date-time
        label:
          type: string
          example: Bundestagswahl 2021
    Polity:
      required:
        - election_system
        - id
        - label
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        election_system:
          $ref: '#/components/schemas/ElectionSystem'
        label:
          type: string
          example: Bundesrepublik Deutschland
    ElectionSystem:
      required:
        - id
        - label
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        label:
          type: string
          example: mixed-member proportional representation
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    Candidate:
      required:
        - candidateId
      type: object
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        name:
          type: string
          example: Philipp Amthor
        image:
          $ref: '#/components/schemas/CandidateImage'
        party:
          type: integer
          example: 1
      description: Electoral Candidate for political office
    Constituency:
      description: Electoral Constituency
    Party:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        name:
          type: string
          example: CDU/CSU
      description: Political Party
    Poll:
      properties:
        id:
          type: integer
          readOnly: true
        label:
          type: string
        result:
          $ref: '#/components/schemas/PollResult'
      description: Parliamentary Poll
    Vote:
      properties:
        id:
          type: integer
          readOnly: true
        candidate:
          type: integer
        poll:
          type: integer
      description: Vote on Parliamentary Poll
    Controversy:
      required:
        - candidate
        - id
        - label
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        label:
          type: string
          example: Augustus Intelligence
        candidate:
          $ref: '#/components/schemas/Candidate'
      description: Controversy related to a candidate
    ControversyArticle:
      required:
        - id
        - url
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        url:
          type: string
          format: url
      description: Article about a controversy
    CandidateImageBbox:
      type: object
      properties:
        minX:
          type: number
          format: double
          example: 0
        maxX:
          type: number
          format: double
          example: 2746
        minY:
          type: number
          format: double
          example: 0
        maxY:
          type: number
          format: double
          example: 2746
    CandidateImage:
      type: object
      properties:
        src:
          type: string
          example: 'https://commons.wikimedia.org/wiki/File:Philipp_Amthor.jpg#/media/File:Philipp_Amthor.jpg'
        bbox:
          $ref: '#/components/schemas/CandidateImageBbox'
    PollResult:
      type: object
      properties:
        'true':
          type: integer
        'false':
          type: integer
        abstain:
          type: integer
        no_vote:
          type: integer
    inline_response_404:
      type: object
      properties:
        message:
          type: string
    inline_response_201:
      type: object
      properties:
        id:
          type: integer
  responses:
    400Error:
      description: Invalid request
    404Error:
      description: The specified resource was not found.
    201Created:
      description: The specified resource was created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    200OK:
      description: OK
