openapi: 3.0.0
info:
  title: Face the Facts API
  description: Face the Facts API
  contact:
    email: fabi@facethefacts.app
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/Face-the-Facts/REST-API/1.0.0
  description: SwaggerHub API Auto Mocking
tags:
- name: Candidates
  description: Everything about candidates
- name: Parties
  description: Everything about parties
- name: Constituencies
  description: Everything about constituencies
- name: Poll
  description: everything about polls
- name: Election
  description: everything about elections
paths:
  /elections:
    get:
      tags:
      - Election
      description: Get a list of elections
      parameters:
      - name: limit
        in: query
        description: Limits the number of items on a page
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: offset
        in: query
        description: Specifies the page number of the artists to be displayed
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ElectionResponse'
        "404":
          description: 404 Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
    post:
      tags:
      - Election
      description: Add a new election
      parameters:
      - name: limit
        in: query
        description: Limits the number of items on a page
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: offset
        in: query
        description: Specifies the page number of the artists to be displayed
        required: false
        style: form
        explode: true
        schema:
          type: integer
      requestBody:
        description: Election request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ElectionRequest'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElectionResponse'
  /elections/{id}:
    get:
      tags:
      - Election
    put:
      tags:
      - Election
    delete:
      tags:
      - Election
    patch:
      tags:
      - Election
  /candidates:
    get:
      tags:
      - Candidates
      description: Returns a list of candidates
      operationId: getCandidates
      parameters:
      - name: limit
        in: query
        description: Limits the number of items on a page
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: offset
        in: query
        description: Specifies the page number of the artists to be displayed
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: party
        in: query
        description: ID of the party to be filtered by
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: Successfully returned a list of candidates
          content:
            'application/json:':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Candidate'
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
    post:
      tags:
      - Candidates
      description: Create a new Candidate
      operationId: postCandidate
      requestBody:
        description: Optional description in *Markdown*
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Candidate'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_201'
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
        "404":
          description: 404 Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
  /candidates/{id}:
    get:
      tags:
      - Candidates
      description: Returns a candidate by ID
      operationId: getCandidate
      parameters:
      - name: id
        in: path
        description: The ID of the candidate to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            'application/json:':
              schema:
                $ref: '#/components/schemas/Candidate'
          links:
            GetCandidateParty:
              operationId: getParty
              parameters:
                partyId: $response.body#/party
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
        "404":
          description: 404 Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
    put:
      tags:
      - Candidates
    delete:
      tags:
      - Candidates
    patch:
      tags:
      - Candidates
  /parties:
    get:
      tags:
      - Parties
      description: Returns a collection of Parties
      parameters:
      - name: partyId
        in: query
        description: The ID of the Political Party to return
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            'application/json:':
              schema:
                $ref: '#/components/schemas/Party'
    post:
      tags:
      - Parties
      description: Create a new Candidate
      operationId: postParty
      requestBody:
        description: Political party to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Party'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_201'
    head:
      tags:
      - Parties
      responses:
        "200":
          description: OK
  /parties/{id}:
    get:
      tags:
      - Parties
      description: Returns a Political Party by ID
      parameters:
      - name: id
        in: path
        description: The ID of the Political Party to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            'application/json:':
              schema:
                $ref: '#/components/schemas/Party'
          links:
            GetPartyMembers:
              operationId: GetCandidatesByParty
              parameters:
                politicalParty: $response.body#/id
    put:
      tags:
      - Parties
      description: Replace a Party
      operationId: putParty
      parameters:
      - name: id
        in: path
        description: The ID of the Political Party to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        description: Optional description in *Markdown*
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Party'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_201'
    delete:
      tags:
      - Parties
      description: Delete a Party
      operationId: deleteParty
      parameters:
      - name: id
        in: path
        description: The ID of the Political Party to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_201'
    patch:
      tags:
      - Parties
      description: Partially update a Party
      operationId: patchParty
      parameters:
      - name: id
        in: path
        description: The ID of the Political Party to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        description: Optional description in *Markdown*
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Party'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_201'
components:
  schemas:
    ElectionResponse:
      required:
      - date
      - id
      - label
      - polity
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        polity:
          $ref: '#/components/schemas/Polity'
        date:
          type: string
          format: date-time
        label:
          type: string
          example: Bundestagswahl 2021
    ElectionRequest:
      required:
      - date
      - label
      - polity_id
      type: object
      properties:
        polity_id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        date:
          type: string
          format: date-time
        label:
          type: string
          example: Bundestagswahl 2021
    Polity:
      required:
      - election_system
      - id
      - label
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        election_system:
          $ref: '#/components/schemas/ElectionSystem'
        label:
          type: string
          example: Bundesrepublik Deutschland
    ElectionSystem:
      required:
      - id
      - label
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        label:
          type: string
          example: mixed-member proportional representation
    inline_response_404:
      type: object
      properties:
        message:
          type: string
    inline_response_201:
      type: object
      properties:
        id:
          type: integer
  responses:
    "400Error":
      description: Invalid request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_404'
    "404Error":
      description: 404 Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_404'
    "201Created":
      description: Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_201'
    "200OK":
      description: OK
      content:
        application/json:
          schema:
            type: object
  parameters:
    PageLimit:
      name: limit
      in: query
      description: Limits the number of items on a page
      required: false
      style: form
      explode: true
      schema:
        type: integer
    PageNumber:
      name: offset
      in: query
      description: Specifies the page number of the artists to be displayed
      required: false
      style: form
      explode: true
      schema:
        type: integer
    Candidate:
      name: candidate
      in: query
      description: ID of the candidate to be filtered by
      required: false
      style: form
      explode: true
      schema:
        type: integer
    PartyId:
      name: party
      in: query
      description: ID of the party to be filtered by
      required: false
      style: form
      explode: true
      schema:
        type: integer
